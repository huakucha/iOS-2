// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FooProto.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "FooProto.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - FooProtoRoot

@implementation FooProtoRoot

@end

#pragma mark - FooProtoRoot_FileDescriptor

static GPBFileDescriptor *FooProtoRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - FooUuid

@implementation FooUuid

@dynamic uuid;

typedef struct FooUuid__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
} FooUuid__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .number = FooUuid_FieldNumber_Uuid,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(FooUuid__storage_, uuid),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[FooUuid class]
                                     rootClass:[FooProtoRoot class]
                                          file:FooProtoRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(FooUuid__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - FooMessage1

@implementation FooMessage1

@dynamic hasUuid, uuid;
@dynamic username;
@dynamic password;
@dynamic sex;
@dynamic photo;

typedef struct FooMessage1__storage_ {
  uint32_t _has_storage_[1];
  FooMessage1_Sex sex;
  FooUuid *uuid;
  NSString *username;
  NSString *password;
  NSData *photo;
} FooMessage1__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .number = FooMessage1_FieldNumber_Uuid,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(FooMessage1__storage_, uuid),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(FooUuid),
        .fieldOptions = NULL,
      },
      {
        .name = "username",
        .number = FooMessage1_FieldNumber_Username,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(FooMessage1__storage_, username),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "password",
        .number = FooMessage1_FieldNumber_Password,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(FooMessage1__storage_, password),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "sex",
        .number = FooMessage1_FieldNumber_Sex,
        .hasIndex = 3,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(FooMessage1__storage_, sex),
        .defaultValue.valueEnum = FooMessage1_Sex_Man,
        .dataTypeSpecific.enumDescFunc = FooMessage1_Sex_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "photo",
        .number = FooMessage1_FieldNumber_Photo,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBytes,
        .offset = offsetof(FooMessage1__storage_, photo),
        .defaultValue.valueData = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    static GPBMessageEnumDescription enums[] = {
      { .enumDescriptorFunc = FooMessage1_Sex_EnumDescriptor },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[FooMessage1 class]
                                     rootClass:[FooProtoRoot class]
                                          file:FooProtoRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:enums
                                     enumCount:sizeof(enums) / sizeof(GPBMessageEnumDescription)
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(FooMessage1__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t FooMessage1_Sex_RawValue(FooMessage1 *message) {
  GPBDescriptor *descriptor = [FooMessage1 descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:FooMessage1_FieldNumber_Sex];
  return GPBGetMessageInt32Field(message, field);
}

void SetFooMessage1_Sex_RawValue(FooMessage1 *message, int32_t value) {
  GPBDescriptor *descriptor = [FooMessage1 descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:FooMessage1_FieldNumber_Sex];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum FooMessage1_Sex

GPBEnumDescriptor *FooMessage1_Sex_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Man", .number = FooMessage1_Sex_Man },
      { .name = "Woman", .number = FooMessage1_Sex_Woman },
    };
    static const char *extraTextFormatInfo = "\002\000#\000\001%\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(FooMessage1_Sex)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:FooMessage1_Sex_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL FooMessage1_Sex_IsValidValue(int32_t value__) {
  switch (value__) {
    case FooMessage1_Sex_Man:
    case FooMessage1_Sex_Woman:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - FooMessage2

@implementation FooMessage2

@dynamic hasUuid, uuid;
@dynamic html;

typedef struct FooMessage2__storage_ {
  uint32_t _has_storage_[1];
  FooUuid *uuid;
  NSString *html;
} FooMessage2__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .number = FooMessage2_FieldNumber_Uuid,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(FooMessage2__storage_, uuid),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(FooUuid),
        .fieldOptions = NULL,
      },
      {
        .name = "html",
        .number = FooMessage2_FieldNumber_Html,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(FooMessage2__storage_, html),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[FooMessage2 class]
                                     rootClass:[FooProtoRoot class]
                                          file:FooProtoRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(FooMessage2__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
